{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/utils/Connect.js\";\nimport * as THREE from \"three\";\nimport React, { useEffect, useState } from \"react\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nimport { useSprings, a } from \"react-spring/three\";\nimport io from \"socket.io-client\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\nconst number = 35;\nconst colors = [\"#A2CCB6\", \"#FCEEB5\", \"#EE786E\", \"#e0feff\", \"lightpink\", \"lightblue\"];\n\nconst random = i => {\n  const r = Math.random();\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  };\n};\n\nconst data = new Array(number).fill().map(() => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  };\n});\n\nfunction Content() {\n  const [thing, setThing] = useState(10);\n  console.log(\"turd \" + thing);\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: {\n      mass: thing,\n      tension: thing,\n      friction: thing\n    }\n  }));\n  useEffect(() => void setInterval(() => set(i => ({ ...random(i),\n    delay: i * 40\n  })), 3000), [set]);\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  });\n  return data.map((d, index) => React.createElement(a.mesh, Object.assign({\n    key: index\n  }, springs[index], {\n    castShadow: true,\n    receiveShadow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: d.thing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(a.meshStandardMaterial, {\n    attach: \"material\",\n    color: springs[index].color,\n    roughness: thing,\n    metalness: thing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\nfunction Lights() {\n  return React.createElement(\"group\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"pointLight\", {\n    intensity: 0.3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nconst Canvas = styled(c)`\n  background-color: #cdcd;\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\nexport default function Box() {\n  return React.createElement(Canvas, {\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    gl: ({\n      gl\n    }) => {\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Lights, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/utils/Connect.js"],"names":["THREE","React","useEffect","useState","Canvas","c","styled","useSprings","a","io","endpoint","socket","number","colors","random","i","r","Math","position","color","round","length","scale","rotation","degToRad","data","Array","fill","map","args","Content","thing","setThing","console","log","springs","set","from","config","mass","tension","friction","setInterval","delay","on","d","index","Lights","PI","Box","fov","gl","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport React, { useEffect, useState } from \"react\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nimport { useSprings, a } from \"react-spring/three\";\nimport io from \"socket.io-client\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nconst number = 35;\nconst colors = [\n  \"#A2CCB6\",\n  \"#FCEEB5\",\n  \"#EE786E\",\n  \"#e0feff\",\n  \"lightpink\",\n  \"lightblue\"\n];\nconst random = i => {\n  const r = Math.random();\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  };\n};\n\nconst data = new Array(number).fill().map(() => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  };\n});\n\nfunction Content() {\n  const [thing, setThing] = useState(10);\n  console.log(\"turd \" + thing);\n\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: { mass: thing, tension: thing, friction: thing }\n  }));\n  useEffect(\n    () =>\n      void setInterval(() => set(i => ({ ...random(i), delay: i * 40 })), 3000),\n    [set]\n  );\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  });\n  return data.map((d, index) => (\n    <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\n      <boxBufferGeometry attach=\"geometry\" args={d.thing} />\n      <a.meshStandardMaterial\n        attach=\"material\"\n        color={springs[index].color}\n        roughness={thing}\n        metalness={thing}\n      />\n    </a.mesh>\n  ));\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  );\n}\n\nconst Canvas = styled(c)`\n  background-color: #cdcd;\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function Box() {\n  return (\n    <Canvas\n      shadowMap\n      camera={{ position: [0, 0, 100], fov: 100 }}\n      gl={({ gl }) => {\n        gl.toneMapping = THREE.ACESFilmicToneMapping;\n        gl.outputEncoding = THREE.sRGBEncoding;\n      }}\n    >\n      <Lights />\n      <Content />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}