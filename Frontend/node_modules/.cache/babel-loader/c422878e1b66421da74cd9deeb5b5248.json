{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js\";\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({\n  props,\n  thing,\n  mouse\n}) {\n  // This reference will give us direct access to the mesh\n  const mesh = new THREE.InstancedMesh();\n  const {\n    size,\n    viewport\n  } = useThree();\n  const aspect = size.width / viewport.width;\n  const dummy = useMemo(() => new THREE.Object3D(), []); // Set up state for the hovered and active state\n\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  const particles = useMemo(() => {\n    const temp = [];\n\n    for (let i = 0; i < thing; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -50 + Math.random() * 100;\n      const yFactor = -50 + Math.random() * 100;\n      const zFactor = -50 + Math.random() * 100;\n      temp.push({\n        t,\n        factor,\n        speed,\n        xFactor,\n        yFactor,\n        zFactor,\n        mx: 0,\n        my: 0\n      });\n    }\n\n    return temp;\n  }, [thing]);\n  useFrame(state => {\n    // Makes the light follow the mouse\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let {\n        t,\n        factor,\n        speed,\n        xFactor,\n        yFactor,\n        zFactor\n      } = particle; // There is no sense or reason to any of this, just messing around with trigonometric functions\n\n      t = particle.t += speed / 2;\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\n      const s = Math.cos(t);\n      particle.mx += (mouse.current[0] - particle.mx) * 0.01;\n      particle.my += (mouse.current[1] * -1 - particle.my) * 0.01; // Update the dummy object\n\n      dummy.position.set(particle.mx / 10 * a + xFactor + Math.cos(t / 10 * factor) + Math.sin(t * 1) * factor / 10, particle.my / 10 * b + yFactor + Math.sin(t / 10 * factor) + Math.cos(t * 2) * factor / 10, particle.my / 10 * b + zFactor + Math.cos(t / 10 * factor) + Math.sin(t * 3) * factor / 10);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 5, s * 5, s * 5);\n      dummy.updateMatrix(); // And apply the matrix to the instanced item\n\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    }); // mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh,\n    scale: active ? [50, 50, 50] : [100, 100, 100],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? \"hotpink\" : \"orange\",\n    roughness: 0.75,\n    metalness: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n}\n\nfunction Lights() {\n  return React.createElement(\"group\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"pointLight\", {\n    intensity: 0.3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\nexport default function Box() {\n  const mouse = useRef([0, 0]);\n  const [thing, setThing] = useState(0);\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  }, []);\n  console.log(\"state number \" + thing);\n  return React.createElement(Canvas, {\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    gl: ({\n      gl\n    }) => {\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Lights, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Content, {\n    thing: thing,\n    mouse: mouse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js"],"names":["React","useRef","useState","useEffect","useMemo","THREE","useFrame","useThree","io","Canvas","c","styled","endpoint","socket","Content","props","thing","mouse","mesh","InstancedMesh","size","viewport","aspect","width","dummy","Object3D","hovered","setHover","active","setActive","particles","temp","i","t","Math","random","factor","speed","xFactor","yFactor","zFactor","push","mx","my","state","forEach","particle","a","cos","sin","b","s","current","position","set","scale","rotation","updateMatrix","setMatrixAt","matrix","e","Lights","PI","Box","setThing","on","data","console","log","fov","gl","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({ props, thing, mouse }) {\n  // This reference will give us direct access to the mesh\n  const mesh = new THREE.InstancedMesh();\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < thing; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -50 + Math.random() * 100;\n      const yFactor = -50 + Math.random() * 100;\n      const zFactor = -50 + Math.random() * 100;\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 });\n    }\n    return temp;\n  }, [thing]);\n\n  useFrame(state => {\n    // Makes the light follow the mouse\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\n      const s = Math.cos(t);\n      particle.mx += (mouse.current[0] - particle.mx) * 0.01;\n      particle.my += (mouse.current[1] * -1 - particle.my) * 0.01;\n      // Update the dummy object\n      dummy.position.set(\n        (particle.mx / 10) * a +\n          xFactor +\n          Math.cos((t / 10) * factor) +\n          (Math.sin(t * 1) * factor) / 10,\n        (particle.my / 10) * b +\n          yFactor +\n          Math.sin((t / 10) * factor) +\n          (Math.cos(t * 2) * factor) / 10,\n        (particle.my / 10) * b +\n          zFactor +\n          Math.cos((t / 10) * factor) +\n          (Math.sin(t * 3) * factor) / 10\n      );\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 5, s * 5, s * 5);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    // mesh.current.instanceMatrix.needsUpdate = true;\n  });\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [50, 50, 50] : [100, 100, 100]}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={hovered ? \"hotpink\" : \"orange\"}\n        roughness={0.75}\n        metalness={0.6}\n      />\n    </mesh>\n  );\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  );\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function Box() {\n  const mouse = useRef([0, 0]);\n  const [thing, setThing] = useState(0);\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  }, []);\n  console.log(\"state number \" + thing);\n\n  return (\n    <Canvas\n      shadowMap\n      camera={{ position: [0, 0, 100], fov: 100 }}\n      gl={({ gl }) => {\n        gl.toneMapping = THREE.ACESFilmicToneMapping;\n        gl.outputEncoding = THREE.sRGBEncoding;\n      }}\n    >\n      <Lights />\n      <Content thing={thing} mouse={mouse} />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}