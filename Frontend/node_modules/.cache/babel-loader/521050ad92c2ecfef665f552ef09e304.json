{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Blob.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nconst Blob = styled(animated.div)`\n  width: 80px;\n  height: 80px;\n  background: hotpink;\n  border-radius: 16px;\n`;\n\nconst Simple = () => {\n  const trans = y => `translateY(${y}px)`;\n\n  const [props, set] = useSpring(() => ({\n    x: 0,\n    y: 0,\n    scale: 1\n  }));\n  const bind = useDrag(({\n    down,\n    movement: [mx, my]\n  }) => {\n    set({\n      x: down ? mx : 0,\n      y: down ? my : 0\n    });\n  }); // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n\n  return React.createElement(Blob, Object.assign({}, bind(), {\n    style: {\n      transform: props.y.to(trans)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nexport default Simple;","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Blob.js"],"names":["React","styled","useSpring","animated","useDrag","Blob","div","Simple","trans","y","props","set","x","scale","bind","down","movement","mx","my","transform","to"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACE,QAAQ,CAACG,GAAV,CAAe;;;;;CAAlC;;AAOA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,KAAK,GAAGC,CAAC,IAAK,cAAaA,CAAE,KAAnC;;AACA,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAeT,SAAS,CAAC,OAAO;AACpCU,IAAAA,CAAC,EAAE,CADiC;AAEpCH,IAAAA,CAAC,EAAE,CAFiC;AAGpCI,IAAAA,KAAK,EAAE;AAH6B,GAAP,CAAD,CAA9B;AAKA,QAAMC,IAAI,GAAGV,OAAO,CAAC,CAAC;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,EAAE,CAACC,EAAD,EAAKC,EAAL;AAAlB,GAAD,KAAkC;AACrDP,IAAAA,GAAG,CAAC;AAAEC,MAAAA,CAAC,EAAEG,IAAI,GAAGE,EAAH,GAAQ,CAAjB;AAAoBR,MAAAA,CAAC,EAAEM,IAAI,GAAGG,EAAH,GAAQ;AAAnC,KAAD,CAAH;AACD,GAFmB,CAApB,CAPmB,CAUnB;;AACA,SAAO,oBAAC,IAAD,oBAAUJ,IAAI,EAAd;AAAkB,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAET,KAAK,CAACD,CAAN,CAAQW,EAAR,CAAWZ,KAAX;AAAb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAZD;;AAcA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\n\nconst Blob = styled(animated.div)`\n  width: 80px;\n  height: 80px;\n  background: hotpink;\n  border-radius: 16px;\n`;\n\nconst Simple = () => {\n  const trans = y => `translateY(${y}px)`;\n  const [props, set] = useSpring(() => ({\n    x: 0,\n    y: 0,\n    scale: 1\n  }));\n  const bind = useDrag(({ down, movement: [mx, my] }) => {\n    set({ x: down ? mx : 0, y: down ? my : 0 });\n  });\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return <Blob {...bind()} style={{ transform: props.y.to(trans) }} />;\n};\n\nexport default Simple;\n"]},"metadata":{},"sourceType":"module"}