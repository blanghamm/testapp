{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js\";\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({\n  props,\n  thing,\n  mouse\n}) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const {\n    size,\n    viewport\n  } = useThree();\n  const aspect = size.width / viewport.width;\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  const dummy = useMemo(() => new THREE.Object3D(), []); // Set up state for the hovered and active state\n\n  for (var i = 0; i < thing; i++) {\n    dummy.position.set(Math.random() * 20 - 10, Math.random() * 20 - 10, Math.random() * 20 - 10);\n    dummy.rotation.set(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI);\n    dummy.updateMatrix();\n    mesh.setMatrixAt(i, dummy.matrix);\n  }\n\n  scene.add(mesh);\n  return React.createElement(\"scene\", Object.assign({}, props, {\n    ref: mesh,\n    scale: active ? [50, 50, 50] : [100, 100, 100],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? \"hotpink\" : \"orange\",\n    roughness: 0.75,\n    metalness: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nfunction Lights() {\n  return React.createElement(\"group\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"pointLight\", {\n    intensity: 0.3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\nexport default function Box() {\n  const mouse = useRef([0, 0]);\n  const [thing, setThing] = useState(0);\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  }, []);\n  console.log(\"state number \" + thing);\n  return React.createElement(Canvas, {\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    gl: ({\n      gl\n    }) => {\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Lights, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Content, {\n    thing: thing,\n    mouse: mouse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js"],"names":["React","useRef","useState","useEffect","useMemo","THREE","useFrame","useThree","io","Canvas","c","styled","endpoint","socket","Content","props","thing","mouse","mesh","size","viewport","aspect","width","hovered","setHover","active","setActive","dummy","Object3D","i","position","set","Math","random","rotation","PI","updateMatrix","setMatrixAt","matrix","scene","add","e","Lights","Box","setThing","on","data","console","log","fov","gl","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({ props, thing, mouse }) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n\n  // Set up state for the hovered and active state\n\n  for (var i = 0; i < thing; i++) {\n    dummy.position.set(\n      Math.random() * 20 - 10,\n      Math.random() * 20 - 10,\n      Math.random() * 20 - 10\n    );\n\n    dummy.rotation.set(\n      Math.random() * Math.PI,\n      Math.random() * Math.PI,\n      Math.random() * Math.PI\n    );\n\n    dummy.updateMatrix();\n\n    mesh.setMatrixAt(i, dummy.matrix);\n  }\n\n  scene.add(mesh);\n\n  return (\n    <scene\n      {...props}\n      ref={mesh}\n      scale={active ? [50, 50, 50] : [100, 100, 100]}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={hovered ? \"hotpink\" : \"orange\"}\n        roughness={0.75}\n        metalness={0.6}\n      />\n    </scene>\n  );\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  );\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function Box() {\n  const mouse = useRef([0, 0]);\n  const [thing, setThing] = useState(0);\n  useEffect(() => {\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n  }, []);\n  console.log(\"state number \" + thing);\n\n  return (\n    <Canvas\n      shadowMap\n      camera={{ position: [0, 0, 100], fov: 100 }}\n      gl={({ gl }) => {\n        gl.toneMapping = THREE.ACESFilmicToneMapping;\n        gl.outputEncoding = THREE.sRGBEncoding;\n      }}\n    >\n      <Lights />\n      <Content thing={thing} mouse={mouse} />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}