{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Home.js\";\nimport React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useSpring, a } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\nconst Test = styled(a.div)`\n  width: 80px;\n  height: 80px;\n  background: hotpink;\n  border-radius: 16px;\n`;\n\nconst Home = () => {\n  const [number, setNumber] = useState(0);\n\n  const handleSliderChange = (event, newNumber) => {\n    setNumber(newNumber);\n    event.preventDefault();\n    socket.emit(\"outgoing\", number);\n  };\n\n  function Simple() {\n    const [props, set] = useSpring(() => ({\n      x: 0,\n      y: 0,\n      scale: 1\n    }));\n    const bind = useDrag(({\n      down,\n      movement: [x, y]\n    }) => {\n      set({\n        x: down ? x : 0,\n        y: down ? y : 0,\n        scale: down ? 1.2 : 1,\n        immediate: down\n      });\n    }); // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n\n    return React.createElement(Test, Object.assign({}, bind(), {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Simple, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Home.js"],"names":["React","useState","io","Slider","useSpring","a","useDrag","styled","endpoint","socket","Test","div","Home","number","setNumber","handleSliderChange","event","newNumber","preventDefault","emit","Simple","props","set","x","y","scale","bind","down","movement","immediate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,cAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;AACA,MAAMC,MAAM,GAAGP,EAAE,CAACM,QAAD,CAAjB;AAEA,MAAME,IAAI,GAAGH,MAAM,CAACF,CAAC,CAACM,GAAH,CAAQ;;;;;CAA3B;;AAOA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMc,kBAAkB,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC/CH,IAAAA,SAAS,CAACG,SAAD,CAAT;AACAD,IAAAA,KAAK,CAACE,cAAN;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,UAAZ,EAAwBN,MAAxB;AACD,GAJD;;AAMA,WAASO,MAAT,GAAkB;AAChB,UAAM,CAACC,KAAD,EAAQC,GAAR,IAAelB,SAAS,CAAC,OAAO;AACpCmB,MAAAA,CAAC,EAAE,CADiC;AAEpCC,MAAAA,CAAC,EAAE,CAFiC;AAGpCC,MAAAA,KAAK,EAAE;AAH6B,KAAP,CAAD,CAA9B;AAKA,UAAMC,IAAI,GAAGpB,OAAO,CAAC,CAAC;AAAEqB,MAAAA,IAAF;AAAQC,MAAAA,QAAQ,EAAE,CAACL,CAAD,EAAIC,CAAJ;AAAlB,KAAD,KAAgC;AACnDF,MAAAA,GAAG,CAAC;AACFC,QAAAA,CAAC,EAAEI,IAAI,GAAGJ,CAAH,GAAO,CADZ;AAEFC,QAAAA,CAAC,EAAEG,IAAI,GAAGH,CAAH,GAAO,CAFZ;AAGFC,QAAAA,KAAK,EAAEE,IAAI,GAAG,GAAH,GAAS,CAHlB;AAIFE,QAAAA,SAAS,EAAEF;AAJT,OAAD,CAAH;AAMD,KAPmB,CAApB,CANgB,CAchB;;AACA,WAAO,oBAAC,IAAD,oBAAUD,IAAI,EAAd;AAAkB,MAAA,KAAK,EAAEL,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CA5CD;;AA8CA,eAAeT,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useSpring, a } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nconst Test = styled(a.div)`\n  width: 80px;\n  height: 80px;\n  background: hotpink;\n  border-radius: 16px;\n`;\n\nconst Home = () => {\n  const [number, setNumber] = useState(0);\n\n  const handleSliderChange = (event, newNumber) => {\n    setNumber(newNumber);\n    event.preventDefault();\n    socket.emit(\"outgoing\", number);\n  };\n\n  function Simple() {\n    const [props, set] = useSpring(() => ({\n      x: 0,\n      y: 0,\n      scale: 1\n    }));\n    const bind = useDrag(({ down, movement: [x, y] }) => {\n      set({\n        x: down ? x : 0,\n        y: down ? y : 0,\n        scale: down ? 1.2 : 1,\n        immediate: down\n      });\n    });\n    // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n    return <Test {...bind()} style={props} />;\n  }\n\n  return (\n    <div>\n      {/* <label>\n        Testing:\n        <Slider\n          defaultValue={0}\n          valueLabelDisplay=\"auto\"\n          step={0.1}\n          marks\n          min={0}\n          max={1}\n          onChange={handleSliderChange}\n        />\n      </label> */}\n      <Simple />\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}