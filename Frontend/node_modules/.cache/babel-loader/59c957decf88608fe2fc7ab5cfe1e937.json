{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nimport { useSpring, a } from \"react-spring/three\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({\n  props,\n  thing,\n  mouse\n}) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  const funky = useSpring({\n    scale: active ? [10, 10, 10] : [20, 20, 20],\n    color: hovered ? \"hotpink\" : \"orange\"\n  });\n  useFrame(() => {\n    mesh.current.rotation.y = mesh.current.rotation.x += thing;\n  });\n  return React.createElement(a.mesh, Object.assign({}, props, {\n    ref: mesh,\n    scale: funky.scale,\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(a.meshStandardMaterial, {\n    attach: \"material\",\n    color: funky.color,\n    roughness: 0.75,\n    metalness: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n}\n\nfunction Lights() {\n  return React.createElement(\"group\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"pointLight\", {\n    intensity: 0.3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\nexport default function Box() {\n  const [thing, setThing] = useState(0);\n\n  const myData = e => {\n    e.preventDefault();\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n    console.log(\"state number \" + thing);\n  };\n\n  useEffect(() => {\n    myData();\n  }, []);\n  return React.createElement(Canvas, {\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    gl: ({\n      gl\n    }) => {\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Lights, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Content, {\n    thing: thing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js"],"names":["React","useRef","useState","useEffect","THREE","useFrame","io","Canvas","c","styled","useSpring","a","endpoint","socket","Content","props","thing","mouse","mesh","hovered","setHover","active","setActive","funky","scale","color","current","rotation","y","x","e","Lights","Math","PI","Box","setThing","myData","preventDefault","on","data","console","log","position","fov","gl","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAM,IAAIC,CAAnB,QAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;AACA,MAAMC,MAAM,GAAGP,EAAE,CAACM,QAAD,CAAjB;;AAEA,SAASE,OAAT,CAAiB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAjB,EAA0C;AACxC,QAAMC,IAAI,GAAGjB,MAAM,EAAnB;AACA,QAAM,CAACkB,OAAD,EAAUC,QAAV,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMqB,KAAK,GAAGb,SAAS,CAAC;AACtBc,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAH,GAAkB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADT;AAEtBI,IAAAA,KAAK,EAAEN,OAAO,GAAG,SAAH,GAAe;AAFP,GAAD,CAAvB;AAKAd,EAAAA,QAAQ,CAAC,MAAM;AACba,IAAAA,IAAI,CAACQ,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,GAA0BV,IAAI,CAACQ,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2Bb,KAArD;AACD,GAFO,CAAR;AAIA,SACE,oBAAC,CAAD,CAAG,IAAH,oBACMD,KADN;AAEE,IAAA,GAAG,EAAEG,IAFP;AAGE,IAAA,KAAK,EAAEK,KAAK,CAACC,KAHf;AAIE,IAAA,OAAO,EAAEM,CAAC,IAAIR,SAAS,CAAC,CAACD,MAAF,CAJzB;AAKE,IAAA,aAAa,EAAES,CAAC,IAAIV,QAAQ,CAAC,IAAD,CAL9B;AAME,IAAA,YAAY,EAAEU,CAAC,IAAIV,QAAQ,CAAC,KAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,CAAD,CAAG,oBAAH;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,KAAK,EAAEG,KAAK,CAACE,KAFf;AAGE,IAAA,SAAS,EAAE,IAHb;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAkBD;;AAED,SAASM,MAAT,GAAkB;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAY,IAAA,SAAS,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAc,IAAA,SAAS,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,SAAS,EAAE,GAFb;AAGE,IAAA,KAAK,EAAEC,IAAI,CAACC,EAAL,GAAU,CAHnB;AAIE,IAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJZ;AAKE,IAAA,QAAQ,EAAE,CALZ;AAME,4BAAsB,IANxB;AAOE,6BAAuB,IAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAeD;;AAED,MAAM1B,MAAM,GAAGE,MAAM,CAACD,CAAD,CAAI;;;;CAAzB;AAMA,eAAe,SAAS0B,GAAT,GAAe;AAC5B,QAAM,CAAClB,KAAD,EAAQmB,QAAR,IAAoBjC,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMkC,MAAM,GAAGN,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACO,cAAF;AACAxB,IAAAA,MAAM,CAACyB,EAAP,CAAU,OAAV,EAAmBC,IAAI,IAAI;AACzBJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBzB,KAA9B;AACD,GAND;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAE;AAAEM,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAZ;AAAyBC,MAAAA,GAAG,EAAE;AAA9B,KAFV;AAGE,IAAA,EAAE,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAY;AACdA,MAAAA,EAAE,CAACC,WAAH,GAAiBzC,KAAK,CAAC0C,qBAAvB;AACAF,MAAAA,EAAE,CAACG,cAAH,GAAoB3C,KAAK,CAAC4C,YAA1B;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEhC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nimport { useSpring, a } from \"react-spring/three\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nfunction Content({ props, thing, mouse }) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  const funky = useSpring({\n    scale: active ? [10, 10, 10] : [20, 20, 20],\n    color: hovered ? \"hotpink\" : \"orange\"\n  });\n\n  useFrame(() => {\n    mesh.current.rotation.y = mesh.current.rotation.x += thing;\n  });\n\n  return (\n    <a.mesh\n      {...props}\n      ref={mesh}\n      scale={funky.scale}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <a.meshStandardMaterial\n        attach=\"material\"\n        color={funky.color}\n        roughness={0.75}\n        metalness={0.6}\n      />\n    </a.mesh>\n  );\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  );\n}\n\nconst Canvas = styled(c)`\n  position: absolute !important;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default function Box() {\n  const [thing, setThing] = useState(0);\n  const myData = e => {\n    e.preventDefault();\n    socket.on(\"three\", data => {\n      setThing(data);\n    });\n    console.log(\"state number \" + thing);\n  };\n  useEffect(() => {\n    myData();\n  }, []);\n\n  return (\n    <Canvas\n      shadowMap\n      camera={{ position: [0, 0, 100], fov: 100 }}\n      gl={({ gl }) => {\n        gl.toneMapping = THREE.ACESFilmicToneMapping;\n        gl.outputEncoding = THREE.sRGBEncoding;\n      }}\n    >\n      <Lights />\n      <Content thing={thing} />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}