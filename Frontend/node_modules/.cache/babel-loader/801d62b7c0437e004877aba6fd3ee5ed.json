{"ast":null,"code":"var _jsxFileName = \"/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nconst text = () => {\n  socket.on(\"three\", data => {\n    console.log(\"hit \" + data);\n    setRotation(data);\n  });\n};\n\nconst Main = () => {\n  function Box(props, data) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef(); // Set up state for the hovered and active state\n\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    const [rotation, setRotation] = useState(0.1);\n    useEffect(() => {\n      //This is not working, continues to update three js until it crashes.\n      text();\n    }, []); // Rotate mesh every frame, this is outside of React without overhead\n\n    useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += rotation);\n    return React.createElement(\"mesh\", Object.assign({}, props, {\n      ref: mesh,\n      scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n      onClick: e => setActive(!active),\n      onPointerOver: e => setHover(true),\n      onPointerOut: e => setHover(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1, 1, 1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: hovered ? \"hotpink\" : \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default Box;","map":{"version":3,"sources":["/Users/benlangham/Documents/Uni_Year_3/Dissertation_Final Year Project/FInal_Year_Project/dev/testapp/Frontend/src/components/Three.js"],"names":["React","useRef","useState","useEffect","useFrame","io","endpoint","socket","text","on","data","console","log","setRotation","Main","Box","props","mesh","hovered","setHover","active","setActive","rotation","current","x","y","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACC,QAAD,CAAjB;;AAEA,MAAME,IAAI,GAAG,MAAM;AACjBD,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmBC,IAAI,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASF,IAArB;AACAG,IAAAA,WAAW,CAACH,IAAD,CAAX;AACD,GAHD;AAID,CALD;;AAOA,MAAMI,IAAI,GAAG,MAAM;AACjB,WAASC,GAAT,CAAaC,KAAb,EAAoBN,IAApB,EAA0B;AACxB;AACA,UAAMO,IAAI,GAAGhB,MAAM,EAAnB,CAFwB,CAIxB;;AACA,UAAM,CAACiB,OAAD,EAAUC,QAAV,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;AACA,UAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,UAAM,CAACoB,QAAD,EAAWT,WAAX,IAA0BX,QAAQ,CAAC,GAAD,CAAxC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACd;AACAK,MAAAA,IAAI;AACL,KAHQ,EAGN,EAHM,CAAT,CATwB,CAcxB;;AACAJ,IAAAA,QAAQ,CACN,MAAOa,IAAI,CAACM,OAAL,CAAaD,QAAb,CAAsBE,CAAtB,GAA0BP,IAAI,CAACM,OAAL,CAAaD,QAAb,CAAsBG,CAAtB,IAA2BH,QADtD,CAAR;AAIA,WACE,8CACMN,KADN;AAEE,MAAA,GAAG,EAAEC,IAFP;AAGE,MAAA,KAAK,EAAEG,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHpC;AAIE,MAAA,OAAO,EAAEM,CAAC,IAAIL,SAAS,CAAC,CAACD,MAAF,CAJzB;AAKE,MAAA,aAAa,EAAEM,CAAC,IAAIP,QAAQ,CAAC,IAAD,CAL9B;AAME,MAAA,YAAY,EAAEO,CAAC,IAAIP,QAAQ,CAAC,KAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQE;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AACE,MAAA,MAAM,EAAC,UADT;AAEE,MAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe,QAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAgBD;AACF,CArCD;;AAuCA,eAAeH,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport io from \"socket.io-client\";\n\nconst endpoint = \"http://localhost:3005/\";\nconst socket = io(endpoint);\n\nconst text = () => {\n  socket.on(\"three\", data => {\n    console.log(\"hit \" + data);\n    setRotation(data);\n  });\n};\n\nconst Main = () => {\n  function Box(props, data) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef();\n\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    const [rotation, setRotation] = useState(0.1);\n\n    useEffect(() => {\n      //This is not working, continues to update three js until it crashes.\n      text();\n    }, []);\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(\n      () => (mesh.current.rotation.x = mesh.current.rotation.y += rotation)\n    );\n\n    return (\n      <mesh\n        {...props}\n        ref={mesh}\n        scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n        onClick={e => setActive(!active)}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n        <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n        <meshStandardMaterial\n          attach=\"material\"\n          color={hovered ? \"hotpink\" : \"orange\"}\n        />\n      </mesh>\n    );\n  }\n};\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}